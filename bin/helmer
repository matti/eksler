#!/usr/bin/env bash
set -euo pipefail

. functions.sh

subcommand=$1

case $subcommand in
  list)
    exec helm list --all-namespaces
  ;;
esac

name=$2
case $subcommand in
  diff)
    values_url=${3:-}
    if [ "$values_url" = "" ]; then
      case $name in
        cluster-autoscaler-1)
          values_url="https://raw.githubusercontent.com/kubernetes/autoscaler/cluster-autoscaler-chart-9.16.1/charts/cluster-autoscaler/values.yaml"
        ;;
        ingress-nginx-1)
          values_url="https://raw.githubusercontent.com/kubernetes/ingress-nginx/helm-chart-4.0.18/charts/ingress-nginx/values.yaml"
        ;;
        prometheus-1)
          values_url="https://raw.githubusercontent.com/prometheus-community/helm-charts/prometheus-15.5.3/charts/prometheus/values.yaml"
        ;;
        *)
          _err "unknown name or url: '$name'"
        ;;
      esac
    fi
    diff <(curl -sfL $values_url) "helm/${name}/values.yml"
  ;;
  install)
    variant=${3:-}

    values="helm/charts/$name/values.yml"
    if [ "$variant" != "" ]; then
      values="$values helm/charts/$name/variants/$variant/values.yml"
    fi

    case $name in
      cluster-autoscaler-1)
        $0 apply \
          cluster-autoscaler-1 \
          https://kubernetes.github.io/autoscaler cluster-autoscaler 9.16.1 \
          $values
      ;;
      ingress-nginx-1)
        $0 apply \
          ingress-nginx-1 \
          https://kubernetes.github.io/ingress-nginx ingress-nginx 4.0.18 \
          $values
      ;;
      prometheus-1)
        $0 apply \
          prometheus-1 \
          https://prometheus-community.github.io/helm-charts prometheus 15.5.3 \
          $values
      ;;
      aws-load-balancer-controller-1)
        $0 apply \
          aws-load-balancer-controller-1 \
          https://aws.github.io/eks-charts aws-load-balancer-controller 1.3.3 \
          $values
      ;;
    esac
  ;;
  delete)
    _forever helm delete --namespace "${name}" "${name}"
  ;;
  apply|create|replace)
    repo=$3
    chart=$4
    version=$5
    values=${@:6}

    case $subcommand in
      create)
        if kubectl get ns "${name}"; then
          _output "already created: ${name}"
          exit 0
        fi
      ;;
      replace)
        _forever kubectl delete ns --ignore-not-found "${name}"
      ;;
    esac

    _forever helm repo add "${name}" --force-update "${repo}"
    _forever helm repo update

    opts=""
    tmpfiles=""
    for value in $values; do
      tmpfile=$(mktemp)
      tmpfiles="${tmpfiles} ${tmpfile}"

      envsubst < "${value}" > $tmpfile
      opts="${opts} -f ${tmpfile}"
    done

    for tmpfile in $tmpfiles; do
      cat $tmpfile
    done

    _forever helm upgrade --install \
      "${name}" "${name}/${chart}" \
      --create-namespace --namespace "${name}" \
      --version "${version}" \
      $opts
  ;;
  *)
    _err "unknown ${subcommand}"
  ;;
esac