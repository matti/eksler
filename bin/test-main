#!/usr/bin/env bash
set -euo pipefail
. functions.sh

export REGION="${1}"
export CLUSTER_NAME="${2}"
network="${3}"
generation="${4}"
kubernetes_version="${5}"

bin/eksler create $REGION $CLUSTER_NAME $network $kubernetes_version
export KUBECONFIG=$(bin/eksler with $REGION $CLUSTER_NAME kubeconfig)

export POOLS=${POOLS:-x-1-pre p-1-pre test-1-pre test-2-pre}

for pool in $POOLS; do
  (
    if [ "${POOLS_REFRESH:-}" != "yes" ]; then
      if bin/ekslerpooler get $REGION $CLUSTER_NAME $generation $pool; then
        _output "pool $pool already exists, skip"
        exit 0
      fi
    fi

    bin/test-pools $pool $REGION $CLUSTER_NAME $generation

    _done
  ) 2>&1 | sed -le "s#^# ++ pool [${SECONDS}]: $pool: #;" &
done

wait $(jobs -p)

bin/eksler with $REGION $CLUSTER_NAME list

kubectl delete ns megatest-1 --ignore-not-found
kubectl apply -f tests/megatest-1

bin/helmer install cluster-autoscaler-1
bin/helmer install prometheus-1
bin/helmer install aws-load-balancer-controller-1

# TODO: https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/2039
# https://aws.amazon.com/premiumsupport/knowledge-center/eks-alb-ingress-controller-fargate/
# https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/docs/install/iam_policy.json
# bin/helmer install ingress-nginx-1 $network

# bin/test-test $network

_done
echo ""
