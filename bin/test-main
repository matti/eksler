#!/usr/bin/env bash
set -euo pipefail
. functions.sh

export REGION="${1}"
export CLUSTER_NAME="${2}"
network="${3}"
generation="${4}"
kubernetes_version="${5}"

bin/eksler create $REGION $CLUSTER_NAME $network $kubernetes_version
export KUBECONFIG=$(bin/eksler with $REGION $CLUSTER_NAME kubeconfig)

kubectl delete ns k8s-node-watchdog --ignore-not-found
kubectl apply -f https://raw.githubusercontent.com/matti/k8s-node-watchdog/f4f1cb2f482f953243bc69deb77741606a503d1d/install.yml

kubectl apply -f tests/megatest-1

bin/helmer install cluster-autoscaler-1
bin/helmer install aws-load-balancer-controller-1
bin/helmer install metrics-server-1

export POOLS=${POOLS:-x-1-pre t-2-4-pre-p9-1 t-8-16-pre-p8-1 t-16-32-pre-p7-1 t-32-64-pre-p6-1 t-48-96-pre-p5-1 t-64-128-pre-p4-1}

for pool in $POOLS; do
  (
    if [ "${POOLS_REFRESH:-}" != "yes" ]; then
      if bin/ekslerpooler get $REGION $CLUSTER_NAME $generation $pool; then
        _output "pool $pool already exists, skip"
        exit 0
      fi
    fi

    bin/test-pools $pool $REGION $CLUSTER_NAME $generation

    _done
  ) 2>&1 | sed -le "s#^# ++ pool [${SECONDS}]: $pool: #;" &
done

wait $(jobs -p)

bin/eksler with $REGION $CLUSTER_NAME list


# TODO: https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/2039
# https://aws.amazon.com/premiumsupport/knowledge-center/eks-alb-ingress-controller-fargate/
# https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/docs/install/iam_policy.json
# bin/helmer install ingress-nginx-1 $network

# bin/test-test $network

_done
echo ""
