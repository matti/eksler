#!/usr/bin/env bash
set -euo pipefail
. functions.sh

export REGION="${1}"
export CLUSTER_NAME="${2}"
network="${3}"
generation="${4}"

bin/eksler create $REGION $CLUSTER_NAME $network
export KUBECONFIG=$(bin/eksler with $REGION $CLUSTER_NAME kubeconfig)

#export POOLS=${POOLS:-x-1-pre p-1-pre cluster-1-pre bot-0-pre bot-1-pre bot-2-pre bot-3-pre}
#export POOLS=${POOLS:-x-1-pre p-1-pre cluster-1-pre bot-1-pre bot-2-pre bot-3-pre}
export POOLS=${POOLS:-x-1-pre p-1-pre cluster-1-pre bot-0-pre}

for pool in $POOLS; do
  (
    if [ "${POOLS_REFRESH:-}" != "yes" ]; then
      match=$(bin/ekslerpooler get $REGION $CLUSTER_NAME $generation $pool)
      if [ "$match" != "" ]; then
        _output "pool $pool already exists, skip"
        exit 0
      fi
    fi

    bin/pools $pool $REGION $CLUSTER_NAME $generation

    _done
  ) 2>&1 | sed -le "s#^# ++ pool [${SECONDS}]: $pool: #;" &
done

wait $(jobs -p)

bin/eksler with $REGION $CLUSTER_NAME list

helm_action="create"
if [ "${HELM_REFRESH:-}" = "yes" ]; then
  helm_action="apply"
fi

bin/helmer $helm_action \
  cluster-autoscaler-1 \
  https://kubernetes.github.io/autoscaler cluster-autoscaler 9.11.0 \
  helm/values/cluster-autoscaler-1.yml

bin/helmer $helm_action \
  aws-load-balancer-controller-1 \
  https://aws.github.io/eks-charts aws-load-balancer-controller 1.3.3 \
  helm/values/aws-load-balancer-controller-1.yml

bin/helmer $helm_action \
  ingress-nginx-1 \
  https://kubernetes.github.io/ingress-nginx ingress-nginx 4.0.16 \
  helm/values/ingress-nginx-1.yml helm/values/network/${network}/ingress-nginx-1.yml

bin/helmer $helm_action \
  prometheus-1 \
  https://prometheus-community.github.io/helm-charts prometheus 15.0.4 \
  helm/values/prometheus-1.yml


if [ "${TEST_SKIP:-}" != "yes" ]; then
  bin/test $network
fi

_done
echo ""
