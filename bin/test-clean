#!/usr/bin/env bash
set -euo pipefail

export REGION=$1
export CLUSTER_NAME=$2
target=$3

case "$target" in
  charts)
    for instance in $(bin/eksler cluster helm "$REGION" "$CLUSTER_NAME" list -A -q); do
      (
        while true; do
          bin/eksler cluster helm "$REGION" "$CLUSTER_NAME" delete -n "$instance" "$instance" && break
          sleep 1
        done
        while true; do
          bin/eksler cluster kubectl "$REGION" "$CLUSTER_NAME" delete namespace "$instance" --ignore-not-found && break
          sleep 1
        done
      ) 2>&1 | sed -le "s#^#delete helm instance '$instance': #;" &
    done

    wait

    bin/eksler cluster delete-loadbalancers "$REGION" "$CLUSTER_NAME"

    echo "OK"
  ;;
  nodes)
    $0 "$REGION" "$CLUSTER_NAME" test
    $0 "$REGION" "$CLUSTER_NAME" charts
    bin/eksler managednodegroup delete-all "$REGION" "$CLUSTER_NAME"
  ;;
  k8s-node-watchdog)
    while true; do
      bin/eksler cluster kubectl "$REGION" "$CLUSTER_NAME" delete namespace k8s-node-watchdog --ignore-not-found && break
      sleep 1
    done
  ;;
  test)
    (
      while true; do
        bin/eksler cluster kubectl "$REGION" "$CLUSTER_NAME" delete namespace eksler-test-1 --ignore-not-found && break
        sleep 1
      done
      echo "OK"
    ) 2>&1 | sed -le "s#^#namespace eksler-test-1: #;" &
    (
      while true; do
        bin/eksler cluster kubectl "$REGION" "$CLUSTER_NAME" delete namespace megatest-1 --ignore-not-found && break
        sleep 1
      done
      echo "OK"
    ) 2>&1 | sed -le "s#^#namespace megatest-1: #;" &
    (
      while true; do
        bin/eksler cluster kubectl "$REGION" "$CLUSTER_NAME" delete priorityclass megatest-1 --ignore-not-found && break
        sleep 1
      done
      echo "OK"
    ) 2>&1 | sed -le "s#^#priorityclass with label megatest-1: #;" &

    wait
  ;;
  cluster)
    $0 "$REGION" "$CLUSTER_NAME" nodes
    bin/eksler cluster delete "$REGION" "$CLUSTER_NAME"
  ;;
  *)
    2>&1 echo "wat?"
    exit 1
  ;;
esac