#!/usr/bin/env bash
set -euo pipefail
. functions.sh

export REGION="${1}"
export CLUSTER_NAME="${2}"
network="${3}"
generation="${4}"
kubernetes_version="${5}"

bin/eksler create $REGION $CLUSTER_NAME $network $kubernetes_version
export KUBECONFIG=$(bin/eksler with $REGION $CLUSTER_NAME kubeconfig)

(
  #TODO: fix to sha
  _forever kubectl apply -f https://raw.githubusercontent.com/matti/k8s-node-watchdog/main/install.yml
) 2>&1 | sed -le "s#^# k8s-node-watchdog: #;" &

for chart in cluster-autoscaler-1 aws-load-balancer-controller-1 metrics-server-1 descheduler-1 "ingress-nginx-1 ipv6"; do
  (
    bin/helmer install $chart
  ) 2>&1 | sed -le "s#^# helm $chart: #;" &
done

export POOLS=${POOLS:-x-1-pre w-2-4-pre-p9-1}

for pool in $POOLS; do
  (
    if [ "${POOLS_REFRESH:-}" != "yes" ]; then
      if bin/ekslerpooler get $REGION $CLUSTER_NAME $generation $pool; then
        _output "pool $pool already exists, skip"
        exit 0
      fi
    fi

    bin/app-pools $pool $REGION $CLUSTER_NAME $generation

    _done
  ) 2>&1 | sed -le "s#^# ++ pool [${SECONDS}]: $pool: #;" &
done

wait $(jobs -p)

bin/eksler with $REGION $CLUSTER_NAME list


echo "waiting jobs ..."
wait $(jobs -p)
echo "..done"

_done
echo ""
